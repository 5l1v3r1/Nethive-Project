{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1","program":"/home/mrcoffee/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nom","/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"stream\"","-C","metadata=fe284985f00bbb14","-C","extra-filename=-fe284985f00bbb14","--out-dir","/home/mrcoffee/Blackhead/threlk_engine/target/rls/debug/deps","-L","dependency=/home/mrcoffee/Blackhead/threlk_engine/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/mrcoffee/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mrcoffee/Blackhead/threlk_engine/target/rls/debug/deps/libnom-fe284985f00bbb14.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[5910286376522423171,13009348562261316308]},"crate_root":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src","external_crates":[{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}}],"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":0,"byte_end":4781,"line_start":1,"line_end":181,"column_start":1,"column_end":9}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Offset, ErrorKind","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"InputLength, CompareResult, ParseTo, Slice, Compare, FindToken, AsChar, InputIter","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"IResult, Needed","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":3423,"byte_end":3424,"line_start":115,"line_end":115,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":0,"byte_end":4781,"line_start":1,"line_end":181,"column_start":1,"column_end":9},"name":"","qualname":"::","value":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":71},{"krate":0,"index":255},{"krate":0,"index":285},{"krate":0,"index":348},{"krate":0,"index":377},{"krate":0,"index":387},{"krate":0,"index":398},{"krate":0,"index":413},{"krate":0,"index":417},{"krate":0,"index":437},{"krate":0,"index":442},{"krate":0,"index":533},{"krate":0,"index":541},{"krate":0,"index":567},{"krate":0,"index":725}],"decl_id":null,"docs":" nom, eating data byte by byte","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":5194,"byte_end":5200,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"Offset","qualname":"::util::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":33}],"decl_id":null,"docs":" useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":5154,"byte_end":5183,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":5287,"byte_end":5293,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"name":"offset","qualname":"::util::Offset::offset","value":"fn (&self, second: &Self) -> usize","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":5368,"byte_end":5378,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"HexDisplay","qualname":"::util::HexDisplay","value":"HexDisplay","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":5328,"byte_end":5357,"line_start":24,"line_end":24,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":5470,"byte_end":5476,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"name":"to_hex","qualname":"::util::HexDisplay::to_hex","value":"fn (&self, chunk_size: usize) -> String","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump, returning the owned\n string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":5632,"byte_end":5643,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"name":"to_hex_from","qualname":"::util::HexDisplay::to_hex_from","value":"fn (&self, chunk_size: usize, from: usize) -> String","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n string.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":10707,"byte_end":10723,"line_start":229,"line_end":229,"column_start":8,"column_end":24},"name":"slice_to_offsets","qualname":"::util::slice_to_offsets","value":"fn (input: &[u8], s: &[u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":12567,"byte_end":12583,"line_start":297,"line_end":297,"column_start":8,"column_end":24},"name":"code_from_offset","qualname":"::util::code_from_offset","value":"fn <E> (v: &[(ErrorKind<E>, usize, usize)], offset: usize) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":13094,"byte_end":13105,"line_start":318,"line_end":318,"column_start":8,"column_end":19},"name":"reset_color","qualname":"::util::reset_color","value":"fn (v: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":13206,"byte_end":13217,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"write_color","qualname":"::util::write_color","value":"fn (v: &mut Vec<u8>, color: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":13472,"byte_end":13483,"line_start":337,"line_end":337,"column_start":8,"column_end":19},"name":"print_codes","qualname":"::util::print_codes","value":"fn (colors: HashMap<u32, u8>, names: HashMap<u32, &str>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":13435,"byte_end":13464,"line_start":336,"line_end":336,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":16347,"byte_end":16354,"line_start":445,"line_end":445,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::util::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":54}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":16362,"byte_end":16370,"line_start":446,"line_end":446,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::util::AsBytes::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":970},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17396,"byte_end":17402,"line_start":508,"line_end":508,"column_start":3,"column_end":9},"name":"Custom","qualname":"::util::ErrorKind::Custom","value":"ErrorKind::Custom(E)","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17409,"byte_end":17412,"line_start":509,"line_end":509,"column_start":3,"column_end":6},"name":"Tag","qualname":"::util::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17416,"byte_end":17422,"line_start":510,"line_end":510,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::util::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17426,"byte_end":17432,"line_start":511,"line_end":511,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::util::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17436,"byte_end":17439,"line_start":512,"line_end":512,"column_start":3,"column_end":6},"name":"Alt","qualname":"::util::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":981},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17443,"byte_end":17448,"line_start":513,"line_end":513,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::util::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":983},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17452,"byte_end":17455,"line_start":514,"line_end":514,"column_start":3,"column_end":6},"name":"IsA","qualname":"::util::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17459,"byte_end":17472,"line_start":515,"line_end":515,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::util::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17476,"byte_end":17497,"line_start":516,"line_end":516,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::util::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":989},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17501,"byte_end":17506,"line_start":517,"line_end":517,"column_start":3,"column_end":8},"name":"Many0","qualname":"::util::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17510,"byte_end":17515,"line_start":518,"line_end":518,"column_start":3,"column_end":8},"name":"Many1","qualname":"::util::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":993},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17519,"byte_end":17527,"line_start":519,"line_end":519,"column_start":3,"column_end":11},"name":"ManyTill","qualname":"::util::ErrorKind::ManyTill","value":"ErrorKind::ManyTill","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":995},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17531,"byte_end":17536,"line_start":520,"line_end":520,"column_start":3,"column_end":8},"name":"Count","qualname":"::util::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":997},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17540,"byte_end":17559,"line_start":521,"line_end":521,"column_start":3,"column_end":22},"name":"TakeUntilAndConsume","qualname":"::util::ErrorKind::TakeUntilAndConsume","value":"ErrorKind::TakeUntilAndConsume","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":999},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17563,"byte_end":17572,"line_start":522,"line_end":522,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::util::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17576,"byte_end":17601,"line_start":523,"line_end":523,"column_start":3,"column_end":28},"name":"TakeUntilEitherAndConsume","qualname":"::util::ErrorKind::TakeUntilEitherAndConsume","value":"ErrorKind::TakeUntilEitherAndConsume","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17605,"byte_end":17620,"line_start":524,"line_end":524,"column_start":3,"column_end":18},"name":"TakeUntilEither","qualname":"::util::ErrorKind::TakeUntilEither","value":"ErrorKind::TakeUntilEither","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1005},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17624,"byte_end":17635,"line_start":525,"line_end":525,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::util::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17639,"byte_end":17649,"line_start":526,"line_end":526,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::util::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1009},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17653,"byte_end":17658,"line_start":527,"line_end":527,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::util::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17662,"byte_end":17667,"line_start":528,"line_end":528,"column_start":3,"column_end":8},"name":"Digit","qualname":"::util::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17671,"byte_end":17679,"line_start":529,"line_end":529,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::util::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17683,"byte_end":17691,"line_start":530,"line_end":530,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::util::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1017},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17695,"byte_end":17707,"line_start":531,"line_end":531,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::util::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17711,"byte_end":17716,"line_start":532,"line_end":532,"column_start":3,"column_end":8},"name":"Space","qualname":"::util::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1021},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17720,"byte_end":17730,"line_start":533,"line_end":533,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::util::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1023},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17734,"byte_end":17747,"line_start":534,"line_end":534,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::util::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17751,"byte_end":17754,"line_start":535,"line_end":535,"column_start":3,"column_end":6},"name":"Eof","qualname":"::util::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17758,"byte_end":17765,"line_start":536,"line_end":536,"column_start":3,"column_end":10},"name":"ExprOpt","qualname":"::util::ErrorKind::ExprOpt","value":"ErrorKind::ExprOpt","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1029},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17769,"byte_end":17776,"line_start":537,"line_end":537,"column_start":3,"column_end":10},"name":"ExprRes","qualname":"::util::ErrorKind::ExprRes","value":"ErrorKind::ExprRes","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1031},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17780,"byte_end":17790,"line_start":538,"line_end":538,"column_start":3,"column_end":13},"name":"CondReduce","qualname":"::util::ErrorKind::CondReduce","value":"ErrorKind::CondReduce","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17794,"byte_end":17800,"line_start":539,"line_end":539,"column_start":3,"column_end":9},"name":"Switch","qualname":"::util::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1035},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17804,"byte_end":17811,"line_start":540,"line_end":540,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::util::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1037},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17815,"byte_end":17820,"line_start":541,"line_end":541,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::util::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1039},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17824,"byte_end":17830,"line_start":542,"line_end":542,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::util::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1041},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17834,"byte_end":17838,"line_start":543,"line_end":543,"column_start":3,"column_end":7},"name":"Char","qualname":"::util::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17842,"byte_end":17846,"line_start":544,"line_end":544,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::util::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1045},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17850,"byte_end":17861,"line_start":545,"line_end":545,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::util::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1047},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17865,"byte_end":17878,"line_start":546,"line_end":546,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::util::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1049},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17882,"byte_end":17892,"line_start":547,"line_end":547,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::util::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1051},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17896,"byte_end":17909,"line_start":548,"line_end":548,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::util::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17913,"byte_end":17927,"line_start":549,"line_end":549,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::util::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17931,"byte_end":17941,"line_start":550,"line_end":550,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::util::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1057},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17945,"byte_end":17953,"line_start":551,"line_end":551,"column_start":3,"column_end":11},"name":"Complete","qualname":"::util::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17957,"byte_end":17960,"line_start":552,"line_end":552,"column_start":3,"column_end":6},"name":"Fix","qualname":"::util::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1061},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17964,"byte_end":17971,"line_start":553,"line_end":553,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::util::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1063},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17975,"byte_end":17991,"line_start":554,"line_end":554,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::util::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17995,"byte_end":18001,"line_start":555,"line_end":555,"column_start":3,"column_end":9},"name":"TagStr","qualname":"::util::ErrorKind::TagStr","value":"ErrorKind::TagStr","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1067},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18005,"byte_end":18013,"line_start":556,"line_end":556,"column_start":3,"column_end":11},"name":"IsNotStr","qualname":"::util::ErrorKind::IsNotStr","value":"ErrorKind::IsNotStr","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1069},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18017,"byte_end":18023,"line_start":557,"line_end":557,"column_start":3,"column_end":9},"name":"IsAStr","qualname":"::util::ErrorKind::IsAStr","value":"ErrorKind::IsAStr","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1071},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18027,"byte_end":18040,"line_start":558,"line_end":558,"column_start":3,"column_end":16},"name":"TakeWhile1Str","qualname":"::util::ErrorKind::TakeWhile1Str","value":"ErrorKind::TakeWhile1Str","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1073},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18044,"byte_end":18052,"line_start":559,"line_end":559,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::util::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1075},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18056,"byte_end":18062,"line_start":560,"line_end":560,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::util::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1077},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18066,"byte_end":18088,"line_start":561,"line_end":561,"column_start":3,"column_end":25},"name":"TakeUntilAndConsumeStr","qualname":"::util::ErrorKind::TakeUntilAndConsumeStr","value":"ErrorKind::TakeUntilAndConsumeStr","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1079},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18092,"byte_end":18104,"line_start":562,"line_end":562,"column_start":3,"column_end":15},"name":"TakeUntilStr","qualname":"::util::ErrorKind::TakeUntilStr","value":"ErrorKind::TakeUntilStr","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18108,"byte_end":18111,"line_start":563,"line_end":563,"column_start":3,"column_end":6},"name":"Not","qualname":"::util::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1083},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18115,"byte_end":18126,"line_start":564,"line_end":564,"column_start":3,"column_end":14},"name":"Permutation","qualname":"::util::ErrorKind::Permutation","value":"ErrorKind::Permutation","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1085},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18130,"byte_end":18136,"line_start":565,"line_end":565,"column_start":3,"column_end":9},"name":"Verify","qualname":"::util::ErrorKind::Verify","value":"ErrorKind::Verify","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18140,"byte_end":18149,"line_start":566,"line_end":566,"column_start":3,"column_end":12},"name":"TakeTill1","qualname":"::util::ErrorKind::TakeTill1","value":"ErrorKind::TakeTill1","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":968},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":17375,"byte_end":17384,"line_start":507,"line_end":507,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::util::ErrorKind","value":"ErrorKind::{Custom, Tag, MapRes, MapOpt, Alt, IsNot, IsA, SeparatedList, SeparatedNonEmptyList, Many0, Many1, ManyTill, Count, TakeUntilAndConsume, TakeUntil, TakeUntilEitherAndConsume, TakeUntilEither, LengthValue, TagClosure, Alpha, Digit, HexDigit, OctDigit, AlphaNumeric, Space, MultiSpace, LengthValueFn, Eof, ExprOpt, ExprRes, CondReduce, Switch, TagBits, OneOf, NoneOf, Char, CrLf, RegexpMatch, RegexpMatches, RegexpFind, RegexpCapture, RegexpCaptures, TakeWhile1, Complete, Fix, Escaped, EscapedTransform, TagStr, IsNotStr, IsAStr, TakeWhile1Str, NonEmpty, ManyMN, TakeUntilAndConsumeStr, TakeUntilStr, Not, Permutation, Verify, TakeTill1}","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087}],"decl_id":null,"docs":" indicates which parser returned an error\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":18161,"byte_end":18173,"line_start":569,"line_end":569,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::util::error_to_u32","value":"fn <E> (e: &ErrorKind<E>) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":21082,"byte_end":21093,"line_start":634,"line_end":634,"column_start":12,"column_end":23},"name":"description","qualname":"<ErrorKind<E>>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":25947,"byte_end":25958,"line_start":17,"line_end":17,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::traits::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":83}],"decl_id":null,"docs":" abstract method to calculate the input length\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":26078,"byte_end":26087,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"name":"input_len","qualname":"::traits::InputLength::input_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" calculates the input length, as indicated by its name,\n and the name of the trait itself\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":26063,"byte_end":26072,"line_start":20,"line_end":20,"column_start":3,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":26660,"byte_end":26666,"line_start":50,"line_end":50,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::traits::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" transforms common types to a char for basic token parsing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":26721,"byte_end":26728,"line_start":53,"line_end":53,"column_start":8,"column_end":15},"name":"as_char","qualname":"::traits::AsChar::as_char","value":"fn (self) -> char","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" makes a char from self\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":26704,"byte_end":26713,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":26934,"byte_end":26942,"line_start":60,"line_end":60,"column_start":8,"column_end":16},"name":"is_alpha","qualname":"::traits::AsChar::is_alpha","value":"fn (self) -> bool","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" tests that self is an alphabetic character","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":26917,"byte_end":26926,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27062,"byte_end":27073,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"is_alphanum","qualname":"::traits::AsChar::is_alphanum","value":"fn (self) -> bool","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" tests that self is an alphabetic character\n or a decimal digit\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27045,"byte_end":27054,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27154,"byte_end":27166,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"is_dec_digit","qualname":"::traits::AsChar::is_dec_digit","value":"fn (self) -> bool","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" tests that self is a decimal digit\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27137,"byte_end":27146,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27243,"byte_end":27255,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::traits::AsChar::is_hex_digit","value":"fn (self) -> bool","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" tests that self is an hex digit\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27226,"byte_end":27235,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27334,"byte_end":27346,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::traits::AsChar::is_oct_digit","value":"fn (self) -> bool","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" tests that self is an octal digit\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":27317,"byte_end":27326,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":29813,"byte_end":29822,"line_start":160,"line_end":160,"column_start":11,"column_end":20},"name":"InputIter","qualname":"::traits::InputIter","value":"InputIter","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140}],"decl_id":null,"docs":" abstracts common iteration operations on the input type","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":29834,"byte_end":29838,"line_start":161,"line_end":161,"column_start":10,"column_end":14},"name":"Item","qualname":"::traits::InputIter::Item","value":"type Item     : AsChar;","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":133},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":29862,"byte_end":29869,"line_start":162,"line_end":162,"column_start":10,"column_end":17},"name":"RawItem","qualname":"::traits::InputIter::RawItem","value":"type RawItem  : AsChar;","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":134},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":29890,"byte_end":29894,"line_start":163,"line_end":163,"column_start":10,"column_end":14},"name":"Iter","qualname":"::traits::InputIter::Iter","value":"type Iter     : Iterator<Item=(usize, Self::Item)>;","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":135},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":29946,"byte_end":29954,"line_start":164,"line_end":164,"column_start":10,"column_end":18},"name":"IterElem","qualname":"::traits::InputIter::IterElem","value":"type IterElem : Iterator<Item=Self::Item>;","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":30061,"byte_end":30073,"line_start":167,"line_end":167,"column_start":8,"column_end":20},"name":"iter_indices","qualname":"::traits::InputIter::iter_indices","value":"fn (&self) -> Self::Iter","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" returns an iterator over the elements and their byte offsets\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":30150,"byte_end":30163,"line_start":169,"line_end":169,"column_start":8,"column_end":21},"name":"iter_elements","qualname":"::traits::InputIter::iter_elements","value":"fn (&self) -> Self::IterElem","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" returns an iterator over the elements\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":30244,"byte_end":30252,"line_start":171,"line_end":171,"column_start":8,"column_end":16},"name":"position","qualname":"::traits::InputIter::position","value":"fn <P> (&self, predicate: P) -> Option<usize>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" finds the byte position of the element\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":30407,"byte_end":30418,"line_start":173,"line_end":173,"column_start":8,"column_end":19},"name":"slice_index","qualname":"::traits::InputIter::slice_index","value":"fn (&self, count: usize) -> Option<usize>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" get the byte offset from the element's position in the stream\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":30503,"byte_end":30512,"line_start":177,"line_end":177,"column_start":11,"column_end":20},"name":"InputTake","qualname":"::traits::InputTake","value":"InputTake","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144}],"decl_id":null,"docs":" abstracts slicing operations\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":30563,"byte_end":30567,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"take","qualname":"::traits::InputTake::take","value":"fn <P> (&self, count: usize) -> Option<&Self>","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" returns a slice of `count` bytes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":30670,"byte_end":30680,"line_start":181,"line_end":181,"column_start":8,"column_end":18},"name":"take_split","qualname":"::traits::InputTake::take_split","value":"fn <P> (&self, count: usize) -> Option<(&Self, &Self)>","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" split the stream at the `count` byte offset\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1107},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":33555,"byte_end":33557,"line_start":301,"line_end":301,"column_start":3,"column_end":5},"name":"Ok","qualname":"::traits::CompareResult::Ok","value":"CompareResult::Ok","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1109},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":33561,"byte_end":33571,"line_start":302,"line_end":302,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::traits::CompareResult::Incomplete","value":"CompareResult::Incomplete","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":33575,"byte_end":33580,"line_start":303,"line_end":303,"column_start":3,"column_end":8},"name":"Error","qualname":"::traits::CompareResult::Error","value":"CompareResult::Error","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1106},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":33537,"byte_end":33550,"line_start":300,"line_end":300,"column_start":10,"column_end":23},"name":"CompareResult","qualname":"::traits::CompareResult","value":"CompareResult::{Ok, Incomplete, Error}","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1111}],"decl_id":null,"docs":" indicates wether a comparison was successful, an error, or\n if more data was needed\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":179},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":33630,"byte_end":33637,"line_start":307,"line_end":307,"column_start":11,"column_end":18},"name":"Compare","qualname":"::traits::Compare","value":"Compare<T>","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" abstracts comparison operations\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":33698,"byte_end":33705,"line_start":309,"line_end":309,"column_start":6,"column_end":13},"name":"compare","qualname":"::traits::Compare::compare","value":"fn (&self, t: T) -> CompareResult","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" compares self to another value for equality\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":34016,"byte_end":34031,"line_start":317,"line_end":317,"column_start":6,"column_end":21},"name":"compare_no_case","qualname":"::traits::Compare::compare_no_case","value":"fn (&self, t: T) -> CompareResult","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" compares self to another value for equality\n independently of the case.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":201},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":36450,"byte_end":36459,"line_start":409,"line_end":409,"column_start":11,"column_end":20},"name":"FindToken","qualname":"::traits::FindToken","value":"FindToken<T>","parent":null,"children":[{"krate":0,"index":203}],"decl_id":null,"docs":" look for self in the given input stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":36470,"byte_end":36480,"line_start":410,"line_end":410,"column_start":6,"column_end":16},"name":"find_token","qualname":"::traits::FindToken::find_token","value":"fn (&self, input: T) -> bool","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":221},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":37439,"byte_end":37452,"line_start":456,"line_end":456,"column_start":11,"column_end":24},"name":"FindSubstring","qualname":"::traits::FindSubstring","value":"FindSubstring<T>","parent":null,"children":[{"krate":0,"index":223}],"decl_id":null,"docs":" look for a substring in self\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":37463,"byte_end":37477,"line_start":457,"line_end":457,"column_start":6,"column_end":20},"name":"find_substring","qualname":"::traits::FindSubstring::find_substring","value":"fn (&self, substr: T) -> Option<usize>","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":236},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":38256,"byte_end":38263,"line_start":488,"line_end":488,"column_start":11,"column_end":18},"name":"ParseTo","qualname":"::traits::ParseTo","value":"ParseTo<R>","parent":null,"children":[{"krate":0,"index":238}],"decl_id":null,"docs":" abstract method to calculate the input length\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":38216,"byte_end":38245,"line_start":487,"line_end":487,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":38274,"byte_end":38282,"line_start":489,"line_end":489,"column_start":6,"column_end":14},"name":"parse_to","qualname":"::traits::ParseTo::parse_to","value":"fn (&self) -> Option<R>","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":248},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":38783,"byte_end":38788,"line_start":511,"line_end":511,"column_start":11,"column_end":16},"name":"Slice","qualname":"::traits::Slice","value":"Slice<R>","parent":null,"children":[{"krate":0,"index":250}],"decl_id":null,"docs":" slicing operations using ranges","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":38819,"byte_end":38824,"line_start":513,"line_end":513,"column_start":6,"column_end":11},"name":"slice","qualname":"::traits::Slice::slice","value":"fn (&self, range: R) -> Self","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/traits.rs","byte_start":38796,"byte_end":38813,"line_start":512,"line_end":512,"column_start":3,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":255},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"simple_errors","qualname":"::simple_errors","value":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Error management","sig":null,"attributes":[{"value":"cfg(not (feature = \"verbose-errors\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4205,"byte_end":4244,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"macro_use","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4245,"byte_end":4257,"line_start":154,"line_end":154,"column_start":41,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":261},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":41899,"byte_end":41902,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"name":"Err","qualname":"::simple_errors::Err","value":"ErrorKind<E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":42144,"byte_end":42151,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"map_err","qualname":"<IResult<I, O, E>>::map_err","value":"fn <N, F> (self, f: F) -> IResult<I, O, N>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, O, N>` by appling a function\n to a contained `Error` value, leaving `Done` and `Incomplete` value\n untouched.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":42125,"byte_end":42134,"line_start":28,"line_end":28,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":42468,"byte_end":42478,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"unwrap_err","qualname":"<IResult<I, O, E>>::unwrap_err","value":"fn (self) -> Err<E>","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Error(E)` value, or panic if the `IResult` is not\n `Error`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":42779,"byte_end":42793,"line_start":49,"line_end":49,"column_start":10,"column_end":24},"name":"to_full_result","qualname":"<IResult<I, O, E>>::to_full_result","value":"fn (self) -> Result<O, IError<E>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the IResult to a std::result::Result\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":43083,"byte_end":43092,"line_start":58,"line_end":58,"column_start":10,"column_end":19},"name":"to_result","qualname":"<IResult<I, O, E>>::to_result","value":"fn (self) -> Result<O, Err<E>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the IResult to a std::result::Result, or panic if the `IResult` is `Incomplete`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1872},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47065,"byte_end":47072,"line_start":19,"line_end":19,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" needs more data, but we do not know how much\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1874},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47114,"byte_end":47118,"line_start":21,"line_end":21,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(usize)","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" contains the required data size\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1871},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47003,"byte_end":47009,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"Needed::{Unknown, Size}","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1874}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47152,"byte_end":47160,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47310,"byte_end":47313,"line_start":31,"line_end":31,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"fn <F> (self, f: F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47291,"byte_end":47300,"line_start":30,"line_end":30,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1891},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":49127,"byte_end":49131,"line_start":74,"line_end":74,"column_start":3,"column_end":7},"name":"Done","qualname":"::internal::IResult::Done","value":"IResult::Done(I, O)","parent":{"krate":0,"index":1887},"children":[],"decl_id":null,"docs":" indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1895},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":49304,"byte_end":49309,"line_start":76,"line_end":76,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::IResult::Error","value":"IResult::Error(Err<E>)","parent":{"krate":0,"index":1887},"children":[],"decl_id":null,"docs":" contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1898},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":49427,"byte_end":49437,"line_start":78,"line_end":78,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::IResult::Incomplete","value":"IResult::Incomplete(Needed)","parent":{"krate":0,"index":1887},"children":[],"decl_id":null,"docs":" Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1887},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":48968,"byte_end":48975,"line_start":72,"line_end":72,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"IResult::{Done, Error, Incomplete}","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1895},{"krate":0,"index":1898}],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"cfg(not (feature = \"verbose-errors\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":48737,"byte_end":48776,"line_start":66,"line_end":66,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1924},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":49949,"byte_end":49954,"line_start":97,"line_end":97,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::IError::Error","value":"IError::Error(Err<E>)","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1927},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":49966,"byte_end":49976,"line_start":98,"line_end":98,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::IError::Incomplete","value":"IError::Incomplete(Needed)","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1922},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":49931,"byte_end":49937,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"IError","qualname":"::internal::IError","value":"IError::{Error, Incomplete}","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1927}],"decl_id":null,"docs":" This is the same as IResult, but without Done","sig":null,"attributes":[{"value":"cfg(not (feature = \"verbose-errors\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":49718,"byte_end":49757,"line_start":91,"line_end":91,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50026,"byte_end":50033,"line_start":102,"line_end":102,"column_start":10,"column_end":17},"name":"is_done","qualname":"<IResult<I, O, E>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50139,"byte_end":50145,"line_start":109,"line_end":109,"column_start":10,"column_end":16},"name":"is_err","qualname":"<IResult<I, O, E>>::is_err","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50249,"byte_end":50262,"line_start":116,"line_end":116,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<IResult<I, O, E>>::is_incomplete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50376,"byte_end":50378,"line_start":123,"line_end":123,"column_start":10,"column_end":12},"name":"or","qualname":"<IResult<I, O, E>>::or","value":"fn (self, other: IResult<I, O, E>) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50691,"byte_end":50694,"line_start":135,"line_end":135,"column_start":10,"column_end":13},"name":"map","qualname":"<IResult<I, O, E>>::map","value":"fn <N, F> (self, f: F) -> IResult<I, N, E>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, N, E>` by appling a function\n to a contained `Done` value, leaving `Error` and `Incomplete` value\n untouched.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50672,"byte_end":50681,"line_start":134,"line_end":134,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":51076,"byte_end":51083,"line_start":147,"line_end":147,"column_start":10,"column_end":17},"name":"map_inc","qualname":"<IResult<I, O, E>>::map_inc","value":"fn <F> (self, f: F) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `IResult<I, O, E>` to `IResult<I, O, E>` by appling a function\n to a contained `Incomplete` value, leaving `Done` and `Error` value\n untouched.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":51057,"byte_end":51066,"line_start":146,"line_end":146,"column_start":3,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":51398,"byte_end":51404,"line_start":158,"line_end":158,"column_start":10,"column_end":16},"name":"unwrap","qualname":"<IResult<I, O, E>>::unwrap","value":"fn (self) -> (I, O)","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Done(I, O)` value, or panic if the `IResult` is not\n `Done`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":51754,"byte_end":51764,"line_start":168,"line_end":168,"column_start":10,"column_end":20},"name":"unwrap_inc","qualname":"<IResult<I, O, E>>::unwrap_inc","value":"fn (self) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the contained `Incomplete(n)` value, or panic if the `IResult` is not\n `Incomplete`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52011,"byte_end":52019,"line_start":177,"line_end":177,"column_start":11,"column_end":19},"name":"GetInput","qualname":"::internal::GetInput","value":"GetInput<I>","parent":null,"children":[{"krate":0,"index":310}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52030,"byte_end":52045,"line_start":178,"line_end":178,"column_start":6,"column_end":21},"name":"remaining_input","qualname":"::internal::GetInput::remaining_input","value":"fn (&self) -> Option<I>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52080,"byte_end":52089,"line_start":181,"line_end":181,"column_start":11,"column_end":20},"name":"GetOutput","qualname":"::internal::GetOutput","value":"GetOutput<O>","parent":null,"children":[{"krate":0,"index":313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52100,"byte_end":52106,"line_start":182,"line_end":182,"column_start":6,"column_end":12},"name":"output","qualname":"::internal::GetOutput::output","value":"fn (&self) -> Option<O>","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":413},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/methods.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"methods","qualname":"::methods","value":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/methods.rs","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" Method macro combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4410,"byte_end":4422,"line_start":161,"line_end":161,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":437},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/bits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/bits.rs","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"decl_id":null,"docs":" Bit level parsers and combinators","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4464,"byte_end":4476,"line_start":163,"line_end":163,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":461},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":287742,"byte_end":287748,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"tag_cl","qualname":"::nom::tag_cl","value":"fn <'a, 'b> (rec: &'a [u8]) -> Box<Fn(&'b [u8]) -> IResult<&'b [u8], &'b [u8]> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":287725,"byte_end":287734,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":465},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":288118,"byte_end":288123,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"print","qualname":"::nom::print","value":"fn <T> (input: T) -> IResult<T, ()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":288071,"byte_end":288100,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":288101,"byte_end":288110,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":467},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":288229,"byte_end":288234,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"begin","qualname":"::nom::begin","value":"fn (input: &[u8]) -> IResult<(), &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":288212,"byte_end":288221,"line_start":40,"line_end":40,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":468},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":288301,"byte_end":288305,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"crlf","qualname":"::nom::crlf","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":288909,"byte_end":288924,"line_start":61,"line_end":61,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::nom::not_line_ending","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":473},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":290055,"byte_end":290066,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::nom::line_ending","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n')\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":475},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":290753,"byte_end":290756,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"eol","qualname":"::nom::eol","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291015,"byte_end":291028,"line_start":116,"line_end":116,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::nom::is_alphabetic","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphabetic: A-Z, a-z\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":290998,"byte_end":291007,"line_start":115,"line_end":115,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":478},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291168,"byte_end":291176,"line_start":122,"line_end":122,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::nom::is_digit","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII digit: 0-9\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291151,"byte_end":291160,"line_start":121,"line_end":121,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":479},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291297,"byte_end":291309,"line_start":128,"line_end":128,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::nom::is_hex_digit","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII hex digit: 0-9, A-F, a-f\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291280,"byte_end":291289,"line_start":127,"line_end":127,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":480},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291492,"byte_end":291504,"line_start":136,"line_end":136,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::nom::is_oct_digit","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII octal digit: 0-7\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291475,"byte_end":291484,"line_start":135,"line_end":135,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":481},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291628,"byte_end":291643,"line_start":142,"line_end":142,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::nom::is_alphanumeric","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291611,"byte_end":291620,"line_start":141,"line_end":141,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":482},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291761,"byte_end":291769,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"is_space","qualname":"::nom::is_space","value":"fn (chr: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII space or tab\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":291744,"byte_end":291753,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":483},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":292181,"byte_end":292186,"line_start":160,"line_end":160,"column_start":8,"column_end":13},"name":"alpha","qualname":"::nom::alpha","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase alphabetic characters: a-zA-Z\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":485},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":292791,"byte_end":292796,"line_start":181,"line_end":181,"column_start":8,"column_end":13},"name":"digit","qualname":"::nom::digit","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more numerical characters: 0-9\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":487},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":293427,"byte_end":293436,"line_start":202,"line_end":202,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::nom::hex_digit","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more hexadecimal numerical characters: 0-9, A-F, a-f\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":294043,"byte_end":294052,"line_start":223,"line_end":223,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::nom::oct_digit","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":294684,"byte_end":294696,"line_start":244,"line_end":244,"column_start":8,"column_end":20},"name":"alphanumeric","qualname":"::nom::alphanumeric","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more numerical and alphabetic characters: 0-9a-zA-Z\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":295300,"byte_end":295305,"line_start":265,"line_end":265,"column_start":8,"column_end":13},"name":"space","qualname":"::nom::space","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":295972,"byte_end":295982,"line_start":287,"line_end":287,"column_start":8,"column_end":18},"name":"multispace","qualname":"::nom::multispace","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":296611,"byte_end":296623,"line_start":308,"line_end":308,"column_start":8,"column_end":20},"name":"sized_buffer","qualname":"::nom::sized_buffer","value":"fn (input: &[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":296977,"byte_end":296982,"line_start":324,"line_end":324,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::nom::be_u8","value":"fn (i: &[u8]) -> IResult<&[u8], u8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":296960,"byte_end":296969,"line_start":323,"line_end":323,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":297178,"byte_end":297184,"line_start":334,"line_end":334,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::nom::be_u16","value":"fn (i: &[u8]) -> IResult<&[u8], u16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 2 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":297161,"byte_end":297170,"line_start":333,"line_end":333,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":297430,"byte_end":297436,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::nom::be_u32","value":"fn (i: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 4 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":297413,"byte_end":297422,"line_start":344,"line_end":344,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":297730,"byte_end":297736,"line_start":356,"line_end":356,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::nom::be_u64","value":"fn (i: &[u8]) -> IResult<&[u8], u64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian unsigned 8 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":297713,"byte_end":297722,"line_start":355,"line_end":355,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298144,"byte_end":298149,"line_start":368,"line_end":368,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::nom::be_i8","value":"fn (i: &[u8]) -> IResult<&[u8], i8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298127,"byte_end":298136,"line_start":367,"line_end":367,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298288,"byte_end":298294,"line_start":374,"line_end":374,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::nom::be_i16","value":"fn (i: &[u8]) -> IResult<&[u8], i16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 2 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298271,"byte_end":298280,"line_start":373,"line_end":373,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298436,"byte_end":298442,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::nom::be_i32","value":"fn (i: &[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 4 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298419,"byte_end":298428,"line_start":379,"line_end":379,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298584,"byte_end":298590,"line_start":386,"line_end":386,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::nom::be_i64","value":"fn (i: &[u8]) -> IResult<&[u8], i64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian signed 8 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298567,"byte_end":298576,"line_start":385,"line_end":385,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298749,"byte_end":298754,"line_start":392,"line_end":392,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::nom::le_u8","value":"fn (i: &[u8]) -> IResult<&[u8], u8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298732,"byte_end":298741,"line_start":391,"line_end":391,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298953,"byte_end":298959,"line_start":402,"line_end":402,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::nom::le_u16","value":"fn (i: &[u8]) -> IResult<&[u8], u16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 2 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":298936,"byte_end":298945,"line_start":401,"line_end":401,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":508},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":299208,"byte_end":299214,"line_start":413,"line_end":413,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::nom::le_u32","value":"fn (i: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 4 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":299191,"byte_end":299200,"line_start":412,"line_end":412,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":299511,"byte_end":299517,"line_start":424,"line_end":424,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::nom::le_u64","value":"fn (i: &[u8]) -> IResult<&[u8], u64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian unsigned 8 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":299494,"byte_end":299503,"line_start":423,"line_end":423,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":299925,"byte_end":299930,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::nom::le_i8","value":"fn (i: &[u8]) -> IResult<&[u8], i8>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer (equivalent to take!(1)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":299908,"byte_end":299917,"line_start":435,"line_end":435,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300072,"byte_end":300078,"line_start":442,"line_end":442,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::nom::le_i16","value":"fn (i: &[u8]) -> IResult<&[u8], i16>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 2 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300055,"byte_end":300064,"line_start":441,"line_end":441,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300223,"byte_end":300229,"line_start":448,"line_end":448,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::nom::le_i32","value":"fn (i: &[u8]) -> IResult<&[u8], i32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 4 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300206,"byte_end":300215,"line_start":447,"line_end":447,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300374,"byte_end":300380,"line_start":454,"line_end":454,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::nom::le_i64","value":"fn (i: &[u8]) -> IResult<&[u8], i64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian signed 8 bytes integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300357,"byte_end":300366,"line_start":453,"line_end":453,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1952},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300529,"byte_end":300532,"line_start":461,"line_end":461,"column_start":3,"column_end":6},"name":"Big","qualname":"::nom::Endianness::Big","value":"Endianness::Big","parent":{"krate":0,"index":1951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1954},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300536,"byte_end":300542,"line_start":462,"line_end":462,"column_start":3,"column_end":9},"name":"Little","qualname":"::nom::Endianness::Little","value":"Endianness::Little","parent":{"krate":0,"index":1951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1951},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":300514,"byte_end":300524,"line_start":460,"line_end":460,"column_start":10,"column_end":20},"name":"Endianness","qualname":"::nom::Endianness","value":"Endianness::{Big, Little}","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1954}],"decl_id":null,"docs":" Configurable endianness\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":302248,"byte_end":302254,"line_start":493,"line_end":493,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::nom::be_f32","value":"fn (input: &[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian 4 bytes floating point number\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":302231,"byte_end":302240,"line_start":492,"line_end":492,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":302555,"byte_end":302561,"line_start":507,"line_end":507,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::nom::be_f64","value":"fn (input: &[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes big endian 8 bytes floating point number\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":302538,"byte_end":302547,"line_start":506,"line_end":506,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":522},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":302865,"byte_end":302871,"line_start":521,"line_end":521,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::nom::le_f32","value":"fn (input: &[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian 4 bytes floating point number\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":302848,"byte_end":302857,"line_start":520,"line_end":520,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":303175,"byte_end":303181,"line_start":535,"line_end":535,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::nom::le_f64","value":"fn (input: &[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes little endian 8 bytes floating point number\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":303158,"byte_end":303167,"line_start":534,"line_end":534,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":524},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":303463,"byte_end":303470,"line_start":549,"line_end":549,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::nom::hex_u32","value":"fn (input: &[u8]) -> IResult<&[u8], u32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":303446,"byte_end":303455,"line_start":548,"line_end":548,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":525},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304128,"byte_end":304137,"line_start":576,"line_end":576,"column_start":8,"column_end":17},"name":"non_empty","qualname":"::nom::non_empty","value":"fn <T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes non empty buffers\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304111,"byte_end":304120,"line_start":575,"line_end":575,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":527},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304469,"byte_end":304473,"line_start":588,"line_end":588,"column_start":8,"column_end":12},"name":"rest","qualname":"::nom::rest","value":"fn (input: &[u8]) -> IResult<&[u8], &[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304452,"byte_end":304461,"line_start":587,"line_end":587,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304628,"byte_end":304634,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"rest_s","qualname":"::nom::rest_s","value":"fn (input: &str) -> IResult<&str, &str>","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input, for strings.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304611,"byte_end":304620,"line_start":593,"line_end":593,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304832,"byte_end":304837,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"float","qualname":"::nom::float","value":"fn (input: &[u8]) -> IResult<&[u8], f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returs a f32\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":304795,"byte_end":304824,"line_start":599,"line_end":599,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":305397,"byte_end":305404,"line_start":623,"line_end":623,"column_start":8,"column_end":15},"name":"float_s","qualname":"::nom::float_s","value":"fn (input: &str) -> IResult<&str, f32>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a string and returs a f32\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":305360,"byte_end":305389,"line_start":622,"line_end":622,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":531},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":305967,"byte_end":305973,"line_start":646,"line_end":646,"column_start":8,"column_end":14},"name":"double","qualname":"::nom::double","value":"fn (input: &[u8]) -> IResult<&[u8], f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returs a f64\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":305930,"byte_end":305959,"line_start":645,"line_end":645,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":306533,"byte_end":306541,"line_start":669,"line_end":669,"column_start":8,"column_end":16},"name":"double_s","qualname":"::nom::double_s","value":"fn (input: &str) -> IResult<&str, f64>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a string and returs a f64\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/nom.rs","byte_start":306496,"byte_end":306525,"line_start":668,"line_end":668,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2139},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/character.rs","byte_start":326415,"byte_end":326422,"line_start":70,"line_end":70,"column_start":56,"column_end":63},"name":"newline","qualname":"::character::newline","value":"fn (i: &[u8]) -> crate::IResult<&[u8], char, u32>","parent":null,"children":[],"decl_id":null,"docs":"Matches a newline character '\\n'\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2144},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/character.rs","byte_start":326496,"byte_end":326499,"line_start":72,"line_end":72,"column_start":52,"column_end":55},"name":"tab","qualname":"::character::tab","value":"fn (i: &[u8]) -> crate::IResult<&[u8], char, u32>","parent":null,"children":[],"decl_id":null,"docs":"Matches a tab character '\\t'\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":540},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/character.rs","byte_start":326529,"byte_end":326536,"line_start":74,"line_end":74,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::anychar","value":"fn (input: &[u8]) -> IResult<&[u8], char>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":541},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/whitespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"whitespace","qualname":"::whitespace","value":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/whitespace.rs","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566}],"decl_id":null,"docs":" Support for whitespace delimited formats","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4543,"byte_end":4555,"line_start":168,"line_end":168,"column_start":1,"column_end":13}},{"value":"cfg(not (feature = \"core\"))","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4556,"byte_end":4585,"line_start":169,"line_end":169,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/whitespace.rs","byte_start":355429,"byte_end":355431,"line_start":790,"line_end":790,"column_start":8,"column_end":10},"name":"sp","qualname":"::whitespace::sp","value":"fn <'a, T> (input: T) -> IResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_imports)","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/whitespace.rs","byte_start":355397,"byte_end":355421,"line_start":789,"line_end":789,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2157},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":362815,"byte_end":362822,"line_start":17,"line_end":17,"column_start":3,"column_end":10},"name":"Element","qualname":"::stream::Input::Element","value":"Input::Element(I)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2160},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":362829,"byte_end":362834,"line_start":18,"line_end":18,"column_start":3,"column_end":8},"name":"Empty","qualname":"::stream::Input::Empty","value":"Input::Empty","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2162},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":362838,"byte_end":362841,"line_start":19,"line_end":19,"column_start":3,"column_end":6},"name":"Eof","qualname":"::stream::Input::Eof","value":"Input::Eof(Option<I>)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2155},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":362802,"byte_end":362807,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Input","qualname":"::stream::Input","value":"Input::{Element, Empty, Eof}","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2162}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2175},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":363011,"byte_end":363015,"line_start":26,"line_end":26,"column_start":3,"column_end":7},"name":"Done","qualname":"::stream::ConsumerState::Done","value":"ConsumerState::Done(M, O)","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" A value of type O has been produced\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2179},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":363070,"byte_end":363075,"line_start":28,"line_end":28,"column_start":3,"column_end":8},"name":"Error","qualname":"::stream::ConsumerState::Error","value":"ConsumerState::Error(E)","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" An error of type E has been encountered\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":363155,"byte_end":363163,"line_start":30,"line_end":30,"column_start":3,"column_end":11},"name":"Continue","qualname":"::stream::ConsumerState::Continue","value":"ConsumerState::Continue(M)","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" Continue applying, and pass a message of type M to the data source\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2171},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":362938,"byte_end":362951,"line_start":24,"line_end":24,"column_start":10,"column_end":23},"name":"ConsumerState","qualname":"::stream::ConsumerState","value":"ConsumerState::{Done, Error, Continue}","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2179},{"krate":0,"index":2182}],"decl_id":null,"docs":" Stores a consumer's current computation state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":363230,"byte_end":363233,"line_start":34,"line_end":34,"column_start":10,"column_end":13},"name":"map","qualname":"<ConsumerState<O, E, M>>::map","value":"fn <P, F> (&self, f: F) -> ConsumerState<P, E, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":363540,"byte_end":363548,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"flat_map","qualname":"<ConsumerState<O, E, M>>::flat_map","value":"fn <P, F> (&self, f: F) -> ConsumerState<P, E, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":589},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":364032,"byte_end":364040,"line_start":52,"line_end":52,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::stream::Consumer","value":"Consumer<I, O, E, M>","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"decl_id":null,"docs":" The Consumer trait wraps a computation and its state","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":364150,"byte_end":364156,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"name":"handle","qualname":"::stream::Consumer::handle","value":"fn (&mut self, input: Input<I>) -> &ConsumerState<O, E, M>","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" implement handle for the current computation, returning the new state of the consumer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":364248,"byte_end":364253,"line_start":57,"line_end":57,"column_start":6,"column_end":11},"name":"state","qualname":"::stream::Consumer::state","value":"fn (&self) -> &ConsumerState<O, E, M>","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" returns the current state\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":364655,"byte_end":364663,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"Producer","qualname":"::stream::Producer","value":"Producer<'b, I, M: 'b>","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":604}],"decl_id":null,"docs":" The producer wraps a data source, like file or network, and applies a consumer on it","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":365342,"byte_end":365347,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"name":"apply","qualname":"::stream::Producer::apply","value":"fn <'a, O, E> (&'b mut self, consumer: &'a mut Consumer<I, O, E, M>) -> &'a ConsumerState<O, E, M>","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Applies a consumer once on the produced data, and return the consumer's state","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":365543,"byte_end":365546,"line_start":83,"line_end":83,"column_start":6,"column_end":9},"name":"run","qualname":"::stream::Producer::run","value":"fn <'a, O, E> (&'b mut self, consumer: &'a mut Consumer<I, O, E, M>) -> Option<&O>","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Applies a consumer once on the produced data, and returns the generated value if there is one\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":365870,"byte_end":365884,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"ProducerRepeat","qualname":"::stream::ProducerRepeat","value":"ProducerRepeat {  }","parent":null,"children":[{"krate":0,"index":610}],"decl_id":null,"docs":" ProducerRepeat takes a single value, and generates it at each step\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":619},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":366536,"byte_end":366547,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"MemProducer","qualname":"::stream::MemProducer","value":"MemProducer {  }","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624}],"decl_id":null,"docs":" A MemProducer generates values from an in memory byte buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":366666,"byte_end":366669,"line_start":127,"line_end":127,"column_start":10,"column_end":13},"name":"new","qualname":"<MemProducer>::new","value":"fn (buffer: &'x [u8], chunk_size: usize) -> MemProducer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":366963,"byte_end":366970,"line_start":140,"line_end":140,"column_start":3,"column_end":10},"name":"Consume","qualname":"::stream::Move::Consume","value":"Move::Consume(usize)","parent":{"krate":0,"index":2195},"children":[],"decl_id":null,"docs":" indcates how much data was consumed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2199},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":367039,"byte_end":367043,"line_start":142,"line_end":142,"column_start":3,"column_end":7},"name":"Seek","qualname":"::stream::Move::Seek","value":"Move::Seek(SeekFrom)","parent":{"krate":0,"index":2195},"children":[],"decl_id":null,"docs":" indicates where in the input the consumer must seek\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2202},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":367093,"byte_end":367098,"line_start":144,"line_end":144,"column_start":3,"column_end":8},"name":"Await","qualname":"::stream::Move::Await","value":"Move::Await(Needed)","parent":{"krate":0,"index":2195},"children":[],"decl_id":null,"docs":" indicates more data is needed\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2195},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":366912,"byte_end":366916,"line_start":138,"line_end":138,"column_start":10,"column_end":14},"name":"Move","qualname":"::stream::Move","value":"Move::{Consume, Seek, Await}","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2216},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":369790,"byte_end":369796,"line_start":228,"line_end":228,"column_start":3,"column_end":9},"name":"Normal","qualname":"::stream::FileProducerState::Normal","value":"FileProducerState::Normal","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":369800,"byte_end":369805,"line_start":229,"line_end":229,"column_start":3,"column_end":8},"name":"Error","qualname":"::stream::FileProducerState::Error","value":"FileProducerState::Error","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2220},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":369809,"byte_end":369812,"line_start":230,"line_end":230,"column_start":3,"column_end":6},"name":"Eof","qualname":"::stream::FileProducerState::Eof","value":"FileProducerState::Eof","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2215},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":369768,"byte_end":369785,"line_start":227,"line_end":227,"column_start":10,"column_end":27},"name":"FileProducerState","qualname":"::stream::FileProducerState","value":"FileProducerState::{Normal, Error, Eof}","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2231},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":369844,"byte_end":369856,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"FileProducer","qualname":"::stream::FileProducer","value":"FileProducer {  }","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":370037,"byte_end":370040,"line_start":245,"line_end":245,"column_start":10,"column_end":13},"name":"new","qualname":"<FileProducer>::new","value":"fn (filename: &str, buffer_size: usize) -> io::Result<FileProducer>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":370458,"byte_end":370463,"line_start":255,"line_end":255,"column_start":10,"column_end":15},"name":"state","qualname":"<FileProducer>::state","value":"fn (&self) -> FileProducerState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":370589,"byte_end":370595,"line_start":260,"line_end":260,"column_start":10,"column_end":16},"name":"refill","qualname":"<FileProducer>::refill","value":"fn (&mut self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":371305,"byte_end":371311,"line_start":283,"line_end":283,"column_start":10,"column_end":16},"name":"resize","qualname":"<FileProducer>::resize","value":"fn (&mut self, s: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Resize the internal buffer, copy the data to the new one and returned how much data was copied","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":371663,"byte_end":371668,"line_start":300,"line_end":300,"column_start":8,"column_end":13},"name":"shift","qualname":"::stream::shift","value":"fn (s: &mut [u8], start: usize, end: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":374319,"byte_end":374330,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"MapConsumer","qualname":"::stream::MapConsumer","value":"MapConsumer {  }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664}],"decl_id":null,"docs":" MapConsumer takes a function S -> T and applies it on a consumer producing values of type S\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":374644,"byte_end":374647,"line_start":396,"line_end":396,"column_start":10,"column_end":13},"name":"new","qualname":"<MapConsumer>::new","value":"fn (c: &'a mut C, f: F) -> MapConsumer<'a, C, R, S, T, E, M, F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":376001,"byte_end":376014,"line_start":432,"line_end":432,"column_start":12,"column_end":25},"name":"ChainConsumer","qualname":"::stream::ChainConsumer","value":"ChainConsumer {  }","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"decl_id":null,"docs":" ChainConsumer takes a consumer C1 R -> S, and a consumer C2 S -> T, and makes a consumer R -> T by applying C2 on C1's result\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":376330,"byte_end":376333,"line_start":441,"line_end":441,"column_start":10,"column_end":13},"name":"new","qualname":"<ChainConsumer>::new","value":"fn (c1: &'a mut C1, c2: &'b mut C2) -> ChainConsumer<'a, 'b, C1, C2, R, S, T, E, M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":21056,"byte_end":21065,"line_start":633,"line_end":633,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":41939,"byte_end":41946,"line_start":24,"line_end":24,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":43470,"byte_end":43473,"line_start":72,"line_end":72,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":43610,"byte_end":43613,"line_start":79,"line_end":79,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47134,"byte_end":47140,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50000,"byte_end":50007,"line_start":101,"line_end":101,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52167,"byte_end":52174,"line_start":185,"line_end":185,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52356,"byte_end":52363,"line_start":194,"line_end":194,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52539,"byte_end":52546,"line_start":203,"line_end":203,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52737,"byte_end":52744,"line_start":212,"line_end":212,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52920,"byte_end":52927,"line_start":221,"line_end":221,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":53095,"byte_end":53102,"line_start":230,"line_end":230,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":363198,"byte_end":363211,"line_start":33,"line_end":33,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":365952,"byte_end":365966,"line_start":98,"line_end":98,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":366639,"byte_end":366650,"line_start":126,"line_end":126,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":367152,"byte_end":367163,"line_start":147,"line_end":147,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":370013,"byte_end":370025,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":371912,"byte_end":371924,"line_start":310,"line_end":310,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":374603,"byte_end":374614,"line_start":395,"line_end":395,"column_start":71,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":375312,"byte_end":375323,"line_start":415,"line_end":415,"column_start":93,"column_end":104},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":376282,"byte_end":376295,"line_start":440,"line_end":440,"column_start":90,"column_end":103},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":377220,"byte_end":377233,"line_start":462,"line_end":462,"column_start":112,"column_end":125},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4266,"byte_end":4279,"line_start":154,"line_end":154,"column_start":62,"column_end":75},"ref_id":{"krate":0,"index":255}},{"kind":"Mod","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4431,"byte_end":4438,"line_start":161,"line_end":161,"column_start":22,"column_end":29},"ref_id":{"krate":0,"index":413}},{"kind":"Mod","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4485,"byte_end":4489,"line_start":163,"line_end":163,"column_start":22,"column_end":26},"ref_id":{"krate":0,"index":437}},{"kind":"Mod","span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/lib.rs","byte_start":4594,"byte_end":4604,"line_start":170,"line_end":170,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":541}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/util.rs","byte_start":21056,"byte_end":21065,"line_start":633,"line_end":633,"column_start":11,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":41939,"byte_end":41946,"line_start":24,"line_end":24,"column_start":13,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":43470,"byte_end":43473,"line_start":72,"line_end":72,"column_start":42,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":261},"to":{"krate":1,"index":1623}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/simple_errors.rs","byte_start":43610,"byte_end":43613,"line_start":79,"line_end":79,"column_start":38,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":47134,"byte_end":47140,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":50000,"byte_end":50007,"line_start":101,"line_end":101,"column_start":13,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52167,"byte_end":52174,"line_start":185,"line_end":185,"column_start":37,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52356,"byte_end":52363,"line_start":194,"line_end":194,"column_start":28,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52539,"byte_end":52546,"line_start":203,"line_end":203,"column_start":36,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52737,"byte_end":52744,"line_start":212,"line_end":212,"column_start":38,"column_end":45},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":52920,"byte_end":52927,"line_start":221,"line_end":221,"column_start":29,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/internal.rs","byte_start":53095,"byte_end":53102,"line_start":230,"line_end":230,"column_start":37,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":363198,"byte_end":363211,"line_start":33,"line_end":33,"column_start":29,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":365952,"byte_end":365966,"line_start":98,"line_end":98,"column_start":44,"column_end":58},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":608},"to":{"krate":0,"index":596}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":366639,"byte_end":366650,"line_start":126,"line_end":126,"column_start":10,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":367152,"byte_end":367163,"line_start":147,"line_end":147,"column_start":43,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":596}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":370013,"byte_end":370025,"line_start":244,"line_end":244,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":371912,"byte_end":371924,"line_start":310,"line_end":310,"column_start":41,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2231},"to":{"krate":0,"index":596}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":374603,"byte_end":374614,"line_start":395,"line_end":395,"column_start":71,"column_end":82},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":375312,"byte_end":375323,"line_start":415,"line_end":415,"column_start":93,"column_end":104},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":589}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":376282,"byte_end":376295,"line_start":440,"line_end":440,"column_start":90,"column_end":103},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mrcoffee/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-2.2.1/src/stream.rs","byte_start":377220,"byte_end":377233,"line_start":462,"line_end":462,"column_start":112,"column_end":125},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":589}}]}